<?php//// Модель для работы с пользователями.//class M_Users{    private $user_id;    private $user_hash;    private $user_name;    private $user_email;    private $user_password;    private $user_date;	    // Ссылка на экземпляр класса.    private static $instance;    private $msql;    // Получение единственного экземпляра.    public static function instance()    {        if (self::$instance == null)                self::$instance = new M_Users;        return self::$instance;    }    public function __construct()    {        $this->msql = M_MSQL::instance();    }    public function login($user_name, $user_password)    {    // Фильтрация.    $this->user_name = mysql_real_escape_string(trim($user_name));    $this->user_password = md5($user_password);    $query = mysql_query("SELECT * FROM users WHERE name = '$this->user_name' and password = '$this->user_password'");    if (!$query) exit(mysql_error());    $user = mysql_fetch_array($query);    $this->user_id = $user['user_id'];    // Если юзер существует    if ($user) {                    $this->user_hash = md5($this->generateCode(10));                    mysql_query("UPDATE users SET user_hash='$this->user_hash' WHERE user_id='$this->user_id'");                    setcookie("id", $this->user_id, time()+60*60*24*30);                    setcookie("hash", $this->user_hash, time()+60*60*24*30);        return true;    } else {        return false;    }}public function logout()    {    setcookie("hash");    setcookie("id");    return true;}public function add_new_user($name, $email, $password)    {    // Присваиваем переменные и фильтрируем.    $this->user_name = mysql_real_escape_string(trim($name));    $this->user_email = mysql_real_escape_string(trim($email));    $this->user_password = md5($password);    $this->user_date = date("d-m-Y");    $nameexists = mysql_query("SELECT * FROM users                               WHERE name = '$this->user_name'");    if (!$nameexists) exit(mysql_error());    // Проверяем свойства.    if (mysql_num_rows($nameexists)) {        $error = 'Такой имя уже испоьзуется!';        return $error;    } elseif (strlen($this->user_name) > 16) {        $error = 'Длинна имени не должна превышать 16 символов!';        return $error;    } elseif (strlen($this->user_name) < 3) {        $error = 'Длинна имени не должна быть меньше чем 3 символа!';        return $error;    } elseif (strlen($password) < 1) {        $error = 'Введите пароль!';        return $error;    } elseif (preg_match('#[а-яА-Я]#', $password)) {        $error = 'Нельзя использовать русский алфавит для пароля!';        return $error;    } else {        mysql_query("INSERT INTO users (name, password, date, email)                     VALUES ('$this->user_name', '$this->user_password', '$this->user_date', '$this->user_email')");        return true;    }}    public function user_get($id_user)    {        $id_user = abs(intval($id_user));        // Запрос.        $query = mysql_query("SELECT * FROM users WHERE user_id = $id_user");        if (!$query)            die(mysql_error());        $user = mysql_fetch_assoc($query);        return $user;    }    // Функция для генерации случайной строки.    private function generateCode($length=6)    {        $chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHI JKLMNOPRQSTUVWXYZ0123456789";        $code = "";        $clen = strlen($chars) - 1;          while (strlen($code) < $length)        {            $code .= $chars[mt_rand(0,$clen)];          }        return $code;    }    // Проверка наличия авторизации.    public function checkAuth()    {        if (!isset($_COOKIE['id']) and !isset($_COOKIE['hash']))                {                    header("Location: index.php?c=user&act=auth"); exit();                }        else                {                    $this->user_id = $_COOKIE['id'];                    $this->user_hash = $_COOKIE['hash'];                    $query = mysql_query("SELECT * FROM users WHERE user_id = '$this->user_id' AND user_hash = '$this->user_hash'");                    if (!$query) exit(mysql_error());                    if (mysql_num_rows($query) != 0)                            return true;                }    }}